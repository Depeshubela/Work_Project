"""
Django settings for local project.
Generated by 'django-admin startproject' using Django 4.0.8.
For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
# Don't forget to import os at the beginning of the file
import os
from pathlib import Path
from pathlib import Path
from dotenv import load_dotenv
import dj_database_url
from environs import Env 

#env = Env()  # new
#env.read_env()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
load_dotenv(BASE_DIR / '.env')
#STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&v!x8c5sof0mvn^0(4tk%j!z7!f2&6vaa&d%6m13b04vj5)5)6'

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = False
DEBUG = True


#ALLOWED_HOSTS = []
ALLOWED_HOSTS = [
    '*'
    'xyp-workproject.herokuapp.com/'
]
#CSRF_TRUSTED_ORIGINS = ["https://workproject.fly.dev"]
#ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS').split(' ')
#CSRF_TRUSTED_ORIGINS = ["workproject.fly.dev"]


#RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
#if RENDER_EXTERNAL_HOSTNAME:ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'function.apps.FunctionConfig'
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware'
]
#STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
ROOT_URLCONF = 'local.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['./templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

            ],
        },
    },
]

WSGI_APPLICATION = 'local.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
'''
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',  #PostgreSQL
        'NAME': 'dfcoadhf47jppl',  #資料庫名稱
        'USER': 'pevhejgfzgogsk',  #資料庫帳號
        'PASSWORD': 'IY05p6XVEHUWqofCqPqap1COYljVODom',  #資料庫密碼
        'HOST': 'dpg-cdmun02en0hreuh42n20-a',  #Server(伺服器)位址
        'PORT': '5432'  #PostgreSQL Port號
    }
}
'''
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',  #PostgreSQL
        'NAME': 'd7s0et15v4en80',  #資料庫名稱
        'USER': 'vdzmyjcaxzybtt',  #資料庫帳號
        'PASSWORD': '303378ab428516c3047e07781491f7bd32fbbf8eaa348d5bab1560632710e96a',  #資料庫密碼
        'HOST': 'ec2-3-229-161-70.compute-1.amazonaws.com',  #Server(伺服器)位址
        'PORT': '5432'  #PostgreSQL Port號
    }
}

'''
DATABASE_URL = os.getenv('postgres://sean940106@gmail.com::Sean50923@workproject-db.fly.dev:8000/workproject')
DATABASES = {
    'default': dj_database_url.config(),
}
#DATABASES = {
 #   'default': dj_database_url.parse(os.environ.get('postgres://sean940106@gmail.com::Sean50923@workproject-db.fly.dev:8000/workproject'), conn_max_age=600),
#}


DATABASES = {
    "default": env.dj_db_url("DATABASE_URL", default="postgres://sean940106@gmail.com::Sean50923@workproject-db.fly.dev.internal:8000"),
}

DATABASES = {
    "default": 
        'postgres://sean940106@gmail.com::Sean50923@workproject-db.fly.dev.internal:8000'
    
}

'''
# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = "function/static/"

#STATIC_ROOT = BASE_DIR / 'data/staticfiles'
STATIC_ROOT = STATIC_ROOT = os.path.join(BASE_DIR, "function/static/")
    # Turn on WhiteNoise storage backend that takes care of compressing static files
    # and creating unique names for each version so they can safely be cached forever.
STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'
# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
